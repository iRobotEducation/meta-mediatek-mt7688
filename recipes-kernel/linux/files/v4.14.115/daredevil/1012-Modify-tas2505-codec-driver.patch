The original patches for the tas2505 came from "https://github.com/dangtranhieu2012/tas2505-linux-driver".
Initial debug of the driver on showboat indicated issues with the setup of rates, formats and clocking.
These patches allowed the tas2505 driver to function on the showboat board.
diff --git a/sound/soc/codecs/tas2505.c b/sound/soc/codecs/tas2505.c
index f796b7cd..9202792 100644
--- a/sound/soc/codecs/tas2505.c
+++ b/sound/soc/codecs/tas2505.c
@@ -202,7 +202,13 @@ static int tas2505_setup_pll(struct snd_soc_codec *codec,
 	int match = -1;
 	u8 p_div;
 	int i;
-	printk(KERN_ERR "tas2505 setup_pll\n");
+	u16 iface1 = snd_soc_read(codec, TAS2505_IFACE1);
+
+	dev_dbg(tas2505->dev, "setup_pll, mclk=%d\n",mclk_p);
+	if (!(iface1 & (1<<6))) {
+                dev_dbg(tas2505->dev, "slave mode configured, no need to setup pll\n");
+		return 0;
+	}
 
 	for (i = 0; i < ARRAY_SIZE(tas2505_divs); i++) {
 		if (
@@ -250,7 +256,6 @@ static int tas2505_hw_params(struct snd_pcm_substream *substream,
 {
 	struct snd_soc_codec *codec = dai->codec;
 	u8 data = 0;
-	printk(KERN_ERR "tas2505 hw_params\n");
 
 	switch (params_width(params)) {
 		case 16:
@@ -285,7 +290,6 @@ static int tas2505_hw_params(struct snd_pcm_substream *substream,
 static int tas2505_dac_mute(struct snd_soc_dai *codec_dai, int mute)
 {
 	struct snd_soc_codec *codec = codec_dai->codec;
-	printk(KERN_ERR "tas2505 dac_mute %d\n", mute);
 
 	if (mute) {
 		snd_soc_update_bits(codec, TAS2505_DACSETUP2,
@@ -371,28 +375,29 @@ static int tas2505_set_dai_sysclk(struct snd_soc_dai *codec_dai, int clk_id,
 	int i, x;
 
 	dev_dbg(tas2505->dev, "clk_id: %d, freq: %d\n", clk_id, freq);
-	printk(KERN_ERR "tas2505 clk_id: %d, freq: %d\n", clk_id, freq);
 
-	for (i = 0; i < ARRAY_SIZE(tas2505_divs); i++) {
-		for (x = 1; x < 9; x++) {
-			if ((freq / x) == tas2505_divs[i].mclk_p) {
-				tas2505->p_div = x;
-				goto found_p_div;
-			}
-		}
-	}
-
-	dev_err(tas2505->dev, "Can't produce required PLL_CLKIN frequency\n");
-	return -EINVAL;
-
-found_p_div:
-	snd_soc_write(codec, TAS2505_CLKMUX,
-		(clk_id << TAS2505_PLL_CLKIN_SHIFT) | TAS2505_CODEC_CLKIN_PLL);
-	
-	tas2505->sysclk = freq;
-	printk(KERN_ERR "tas2505 clk_id: %d, freq: %d\n", clk_id, freq);
+	switch (clk_id) {
+	case TAS2505_PLL_CLKIN_MCLK:
+		snd_soc_update_bits(codec, TAS2505_CLKMUX,
+					0x1, TAS2505_PLL_CLKIN_MCLK);
+		break;
+	case TAS2505_PLL_CLKIN_BCLK:
+		snd_soc_update_bits(codec, TAS2505_CLKMUX,
+					0x1, TAS2505_PLL_CLKIN_BCLK);
+		break;
+	case TAS2505_CODEC_CLKIN_PLL:
+		snd_soc_update_bits(codec, TAS2505_CLKMUX,
+					0x1, TAS2505_CODEC_CLKIN_PLL);
+		break;
+	case TAS2505_PLL_CLKIN_GPIO:
+		break;
+	default:
+		return -EINVAL;
+        }
 
+        tas2505->sysclk = freq;
 	return 0;
+
 }
 
 static void tas2505_clk_on(struct snd_soc_codec *codec)
@@ -400,7 +405,6 @@ static void tas2505_clk_on(struct snd_soc_codec *codec)
 	u8 mask = TAS2505_PM_MASK;
 	u8 on = TAS2505_PM_MASK;
 
-	printk(KERN_ERR "tas2505 clock on\n");
 	snd_soc_update_bits(codec, TAS2505_PLLPR, mask, on);
 	mdelay(15);
 	snd_soc_update_bits(codec, TAS2505_NDAC, mask, on);
@@ -420,7 +424,6 @@ static void tas2505_clk_off(struct snd_soc_codec *codec)
 
 static void tas2505_power_on(struct snd_soc_codec *codec)
 {
-	printk(KERN_ERR "tas2505 power on\n");
 	snd_soc_write(codec, TAS2505_RESET, 1);
 	usleep_range(500, 1000);
 	snd_soc_update_bits(codec, TAS2505_LDO_CTRL,
@@ -443,7 +446,6 @@ static int tas2505_set_bias_level(struct snd_soc_codec *codec,
 	enum snd_soc_bias_level level)
 {
 	int current_lvl = snd_soc_codec_get_bias_level(codec);
-	printk(KERN_ERR "tas2505 set bias level %d\n", level);
 
 	switch (level) {
 		case SND_SOC_BIAS_ON:
@@ -474,7 +476,6 @@ static int tas2505_set_bias_level(struct snd_soc_codec *codec,
 static int tas2505_codec_probe(struct snd_soc_codec *codec)
 {
 	struct tas2505_priv *tas2505 = snd_soc_codec_get_drvdata(codec);
-	printk(KERN_ERR "tas2505 codec_probe\n");
 	tas2505->codec = codec;
 	return 0;
 }
@@ -528,7 +529,6 @@ static int tas2505_i2c_probe(struct i2c_client *i2c,
 	const struct regmap_config *regmap_config = &tas2505_i2c_regmap;
 	int ret;
 
-	printk(KERN_ERR "tas2505 i2c_probe\n");
 	tas2505 = devm_kzalloc(&i2c->dev, sizeof(*tas2505), GFP_KERNEL);
 	if (tas2505 == NULL)
 		return -ENOMEM;
diff --git a/sound/soc/codecs/tas2505.h b/sound/soc/codecs/tas2505.h
index 8ef97a9..c8e2303 100644
--- a/sound/soc/codecs/tas2505.h
+++ b/sound/soc/codecs/tas2505.h
@@ -15,8 +15,10 @@
 #ifndef _TAS2505_H
 #define _TAS2505_H
 
-#define TAS2505_RATES	SNDRV_PCM_RATE_8000_96000
-#define TAS2505_FORMATS SNDRV_PCM_FMTBIT_S24_LE
+#define TAS2505_RATES	SNDRV_PCM_RATE_8000_48000
+#define TAS2505_FORMATS \
+	(SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S20_3LE | \
+	SNDRV_PCM_FMTBIT_S24_LE | SNDRV_PCM_FMTBIT_S32_LE)
 
 #define TAS2505_REG(page, reg)	((page * 128) + reg)
 
